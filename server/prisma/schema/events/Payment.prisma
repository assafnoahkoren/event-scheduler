// Payment model tied to events

model Payment {
  id          String   @id @default(uuid())

  // Event this payment belongs to
  eventId     String   @map("event_id")
  event       Event    @relation(fields: [eventId], references: [id], onDelete: Cascade)

  // Payment details
  amount      Decimal  @db.Decimal(10, 2)
  currency    String   @default("USD")
  description String?
  paymentDate DateTime? @default(now()) @map("payment_date")

  // Payment method/type (optional)
  paymentMethod String? @map("payment_method")

  // Recorded by
  recordedBy  String   @map("recorded_by")
  recorder    User     @relation(fields: [recordedBy], references: [id])

  // Soft delete
  deletedAt   DateTime? @map("deleted_at")
  isDeleted   Boolean   @default(false) @map("is_deleted")

  // Timestamps
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@index([eventId])
  @@index([isDeleted])
  @@index([eventId, isDeleted]) // Composite index for common query
  @@map("payments")
}
