// Waiting list entries for date requests

model WaitingListEntry {
  id          String   @id @default(uuid())

  // Site this entry belongs to
  siteId      String   @map("site_id")
  site        Site     @relation(fields: [siteId], references: [id], onDelete: Cascade)

  // Client making the request
  clientId    String   @map("client_id")
  client      Client   @relation(fields: [clientId], references: [id], onDelete: Cascade)

  // Rule Type
  ruleType    WaitingListRuleType @map("rule_type")

  // Rule Details (only one set will be used based on ruleType)
  // For SPECIFIC_DATES type - stored as JSON array
  // Example: ["2024-12-25", "2024-12-26", "2024-12-31"]
  specificDates    Json?     @map("specific_dates")

  // For DAY_OF_WEEK type - stored as JSON array of integers (0=Sunday, 6=Saturday)
  // Example: [1, 3, 5] for Monday, Wednesday, Friday
  // Example: [4] for Thursday only
  // Example: [0, 6] for weekends (Sunday and Saturday)
  daysOfWeek       Json?     @map("days_of_week")

  // For DATE_RANGE type - stored as JSON {start: Date, end: Date}
  // Example: {"start": "2024-12-01", "end": "2024-12-15"}
  dateRange        Json?     @map("date_range")

  // Constraints
  expirationDate   DateTime  @map("expiration_date")

  // Status
  status          WaitingListStatus @default(PENDING)

  // Additional Info
  notes           String?   @db.Text

  // Who created this request
  createdBy       String    @map("created_by")
  creator         User      @relation("WaitingListCreator", fields: [createdBy], references: [id])

  // When fulfilled, links to the event
  eventId         String?   @map("event_id")
  event           Event?    @relation(fields: [eventId], references: [id], onDelete: SetNull)

  // Fulfillment tracking
  fulfilledAt     DateTime? @map("fulfilled_at")

  // Soft delete
  deletedAt       DateTime? @map("deleted_at")
  isDeleted       Boolean   @default(false) @map("is_deleted")

  // Timestamps
  createdAt       DateTime  @default(now()) @map("created_at")
  updatedAt       DateTime  @updatedAt @map("updated_at")

  @@index([siteId])
  @@index([clientId])
  @@index([status])
  @@index([expirationDate])
  @@index([createdBy])
  @@index([isDeleted])
  @@index([siteId, isDeleted])
  @@index([siteId, status, isDeleted])
  @@map("waiting_list_entries")
}

enum WaitingListRuleType {
  SPECIFIC_DATES
  DAY_OF_WEEK
  DATE_RANGE
}

enum WaitingListStatus {
  PENDING
  FULFILLED
  EXPIRED
  CANCELLED
}